name: "Publish to GitHub"
run-name: "Publish changes from '${{ github.ref_name }}' (#${{ github.run_number }})"

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Package to publish"
        required: true
        type: choice
        options:
          - conventional-commit
          - semantic-versioning

jobs:
  code-check:
    name: "Static Code Check"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: "Install dependencies"
        run: npm install
      - name: "Run linter"
        working-directory: "packages/${{ github.event.inputs.package }}"
        run: npm run lint
      - name: "Check format"
        run: npm run format-check

  test:
    name: "Test Source Code"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: "Install dependencies"
        run: npm install
      - name: "Run unit-tests"
        working-directory: "packages/${{ github.event.inputs.package }}"
        run: npm test

  publish-package:
    name: "Publish to GitHub Packages"
    needs: [code-check, test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v3
      # Setup .npmrc file to publish to GitHub Packages
      - name: "Setup Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "https://npm.pkg.github.com"
          scope: "@kevits"
      - name: "Publish"
        working-directory: "packages/${{ github.event.inputs.package }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm publish
      - name: "Print summary"
        working-directory: "packages/${{ github.event.inputs.package }}"
        run: |
          version=$(npm pkg get version | tr -d '"')
          echo "### Published Package" >> $GITHUB_STEP_SUMMARY        
          echo "Package: ${{ github.event.inputs.package }}" >> $GITHUB_STEP_SUMMARY
          echo "Version: $version" >> $GITHUB_STEP_SUMMARY
